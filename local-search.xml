<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>树莓派磁盘分区问题</title>
    <link href="/2025/06/21/%E6%A0%91%E8%8E%93%E6%B4%BElinux/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E9%97%AE%E9%A2%98/"/>
    <url>/2025/06/21/%E6%A0%91%E8%8E%93%E6%B4%BElinux/%E6%A0%91%E8%8E%93%E6%B4%BE%E7%A3%81%E7%9B%98%E5%88%86%E5%8C%BA%E9%97%AE%E9%A2%98/</url>
    
    <content type="html"><![CDATA[<p>问题描述：<code>sd</code>卡的大小为为16G，但实际使用的空间却只有3.1G的空间</p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/image-20250619095034227.png" alt="image-20250619095034227"></p><p>这是一个在初次使用树莓派时非常经典且很常见的问题。</p><h2 id="1-问题原因"><a href="#1-问题原因" class="headerlink" title="1.问题原因"></a>1.问题原因</h2><p>简单来说，遇到的情况可以这样比喻：</p><p>你买了一个160平方的大房子（16G的SD卡），但是装修时只规划并且使用了31平方的小房子（3.1G的&#x2F;分区），现在这个房子已经堆满了东西（100使用率），但是房子还有大量未使用的空间。</p><p>具体到技术上：</p><ol><li><strong>系统镜像大小固定</strong>：您烧录到SD卡里的树莓派操作系统（Raspberry Pi OS）镜像，为了能适用于各种大小的SD卡（比如4G或8G），其默认的根分区 &#x2F; 只被设定为一个较小的值（在您这里是3.1G）。</li><li><strong>剩余空间未分配</strong>：当您将这个镜像烧录到一张16G的大卡上时，系统只创建了那个预设的3.1G分区，剩下的约13G空间处于“未分配”状态。操作系统无法使用这部分未分配的空间。</li><li><strong>df -h 的视角</strong>：df -h 命令只显示已挂载的文件系统（也就是那个“小房间”）的大小和使用情况，它看不到那些“未分配”的空间。</li></ol><h2 id="2-解决方案：扩展文件系统"><a href="#2-解决方案：扩展文件系统" class="headerlink" title="2.解决方案：扩展文件系统"></a>2.解决方案：扩展文件系统</h2><p>幸运的是，树莓派官方已经考虑到了这个问题，并提供了一个非常简单的工具来解决。您需要做的就是运行一个命令，让操作系统自动将根分区扩展到充满整个SD卡。</p><p><strong>操作步骤如下：</strong></p><p><strong>1.打开终端，运行树莓派配置工具</strong>：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo raspi-config<br></code></pre></td></tr></table></figure><p>选择扩展选项：</p><ul><li>在打开的蓝色背景菜单中，使用键盘方向键选择 Advanced Options (高级选项)，然后按回车。</li><li>在新菜单中，选择第一项 A1 Expand Filesystem (扩展文件系统)，然后按回车。</li></ul><p>注意：在较新版本的 Raspberry Pi OS 中，这个选项可能已经被移到了主菜单的第一项，直接就叫 Expand Filesystem。如果主菜单有，就直接选它。</p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/image-20250619095934729.png" alt="image-20250619095934729"></p><p><strong>附：如果当前空间100%导致无法操作怎么办？</strong><br>虽然概率不大，但有时100%满的磁盘可能会导致一些命令运行失败。在运行 raspi-config 之前，您可以尝试清理一些缓存来释放一点点空间：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">sudo apt-get clean<br></code></pre></td></tr></table></figure><hr><p>在树莓派中，损耗最大的就是sd卡了，sd卡的大小决定了树莓派磁盘的大小。由于快速的擦写，很容易造成sd卡的物理损伤，造成数据流失。对此，我们应当这样做：</p><ol><li>应该按照正确的顺序对树莓派进行开关机操作<ul><li>关机：执行 <code>sudo halt</code>命令（命令作用为让树莓派内部尽快完成所有读写操作，然后进行关机），待到树莓派闪烁的指示灯熄灭，拔下电源，然后取出sd卡。</li><li>开机：先正确的插入sd卡，然后插入电源线</li></ul></li><li>要使用电源适配器<ul><li>不稳定的电压对树莓派的损伤是很大的，特别是对sd的损伤是不可估量的，所以有一个与树莓派电源相符的电源适配器是必须的</li></ul></li></ol>]]></content>
    
    
    <categories>
      
      <category>树莓派linux</category>
      
      <category>配置教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>树莓派配置教程</title>
    <link href="/2025/06/21/%E6%A0%91%E8%8E%93%E6%B4%BElinux/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/"/>
    <url>/2025/06/21/%E6%A0%91%E8%8E%93%E6%B4%BElinux/%E6%A0%91%E8%8E%93%E6%B4%BE%E9%85%8D%E7%BD%AE%E6%95%99%E7%A8%8B/</url>
    
    <content type="html"><![CDATA[<h2 id="前言-对树莓派的简单理解"><a href="#前言-对树莓派的简单理解" class="headerlink" title="前言:对树莓派的简单理解"></a>前言:对树莓派的简单理解</h2><p>树莓派算是国内比较知名的arm开发版了，它和RK系类的板子还不一样，在使用RK的板子的时候，我们需要在宿主机上对SDK进行交叉编译，然后通过下载器将编译好的镜像文件下载到开发板上。</p><p>而树莓派却不是这样，树莓派采用的方式却是用SD卡的方式，将镜像文件下载到SD卡内，然后将SD卡插到树莓派开发板中，这样树莓派开发板就有了”灵魂”，所以这个SD卡就相当于磁盘的作用，我们可以通过更换SD卡的方式来改变磁盘大小，然而内存大小是不能改变的，它是开发板出厂时就定死的东西。</p><p>树莓派一个很大的优势就是树莓派的社区非常的好，非常活跃，无论你遇到什么样的问题，几乎都可以在社区中找到答案。</p><h2 id="1-设置串口链接树莓派"><a href="#1-设置串口链接树莓派" class="headerlink" title="1.设置串口链接树莓派"></a>1.设置串口链接树莓派</h2><h3 id="1-修改配置"><a href="#1-修改配置" class="headerlink" title="1.修改配置"></a>1.修改配置</h3><p>假设有一块树莓派的板子，我们要对板子进行登录，初次登录仅仅可以使用串口登录的方式。因为我们不知道这个开发板是否联网，是否安装图形化界面等等！</p><p>树莓派的蓝牙和WIFI功能使用的是一个模块，所以我们需要禁止掉蓝牙模块，而使用串口模块。</p><ul><li>打开SD卡根目录根目录下的“config.txt” ，将以下内容添加在文件的最后并保存</li></ul><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs abnf"><span class="hljs-attribute">dtoverlay</span><span class="hljs-operator">=</span>pi3-miniuart-bt<br></code></pre></td></tr></table></figure><p>这样就禁止了蓝牙，解除了对串口的占用！</p><ul><li>然后修改电脑根目录的“cmdline.txt”，将里面的内容全部替换成如下内容，以防万一，请先备份好这个文件中的内容。</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs routeros">dwc_otg.<span class="hljs-attribute">lpm_enable</span>=0 <span class="hljs-attribute">console</span>=tty1 <span class="hljs-attribute">console</span>=serial0,115200 <span class="hljs-attribute">root</span>=/dev/mmcblk0p2 <span class="hljs-attribute">rootfstype</span>=ext4 <span class="hljs-attribute">elevator</span>=deadline fsck.<span class="hljs-attribute">repair</span>=<span class="hljs-literal">yes</span> rootwait<br></code></pre></td></tr></table></figure><p>配置修改完成！</p><p>接下来我们就可以利用串口进行通信！</p><h3 id="2-测试链接"><a href="#2-测试链接" class="headerlink" title="2.测试链接"></a>2.测试链接</h3><p>我们在链接上树莓派后，可以采用如下命令来查询树莓派的引脚情况：</p><figure class="highlight ebnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs ebnf"><span class="hljs-attribute">gpio readall</span><br></code></pre></td></tr></table></figure><p>命令运行结果如下：</p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/702c503c6db74eac963bd93ec2f633bb.webp" alt="img"></p><p>其实这是相互对应的，因为引脚也是并排的。</p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/84d19e532bbb43e6b3b7f2aed87db8df.webp" alt="img"></p><p>这张图相比就很形象了，其中的⭕️就对应这个位置</p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/507eb7638605494782c421991c5b9ca1.webp" alt="img"></p><p>至此，我们再通过一些步骤就可以顺利链接上树莓派了。</p><h2 id="2-树莓派配置网络"><a href="#2-树莓派配置网络" class="headerlink" title="2.树莓派配置网络"></a>2.树莓派配置网络</h2><h3 id="1-链接网络并获取网络IP"><a href="#1-链接网络并获取网络IP" class="headerlink" title="1.链接网络并获取网络IP"></a>1.链接网络并获取网络IP</h3><p>我们实现更加复杂的功能，首先要做的就是联网，联网的步骤如下：</p><ol><li>输入命令</li></ol><figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs autohotkey">sudo nano /etc/wp<span class="hljs-built_in">a_supplicant</span>/wp<span class="hljs-built_in">a_supplicant</span>.conf<br></code></pre></td></tr></table></figure><ol><li>在文件中添加无线配置信息</li></ol><figure class="highlight abnf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><code class="hljs abnf">ctrl_interface<span class="hljs-operator">=</span>DIR<span class="hljs-operator">=/</span>var/run/wpa_supplicant GROUP<span class="hljs-operator">=</span>netdev<br>update_config<span class="hljs-operator">=</span><span class="hljs-number">1</span><br><span class="hljs-attribute">country</span><span class="hljs-operator">=</span>CN<br> <br><span class="hljs-attribute">network</span><span class="hljs-operator">=</span>&#123;<br>        ssid<span class="hljs-operator">=</span><span class="hljs-string">&quot;Xiaomi509&quot;</span><br>        psk<span class="hljs-operator">=</span><span class="hljs-string">&quot;509509509&quot;</span><br>        key_mgmt<span class="hljs-operator">=</span>WPA-PSK <br>&#125;<br> <br><span class="hljs-attribute">network</span><span class="hljs-operator">=</span>&#123;<br>        ssid<span class="hljs-operator">=</span><span class="hljs-string">&quot;你的其他无线网名字&quot;</span><br>        psk<span class="hljs-operator">=</span><span class="hljs-string">&quot;密码&quot;</span><br>        key_mgmt<span class="hljs-operator">=</span>WPA-PSK<br>&#125;<br> <br></code></pre></td></tr></table></figure><ol><li>然后sudo reboot进行重启</li><li>ip a 命令查看是否获取到P地址。</li></ol><h3 id="2-固定IP地址"><a href="#2-固定IP地址" class="headerlink" title="2.固定IP地址"></a>2.固定IP地址</h3><p>由于每次开发板上电，路由器都会随机为开发板分配IP地址，所以开发板的IP地址是不固定的，这对实际开发的影响还是挺大的，所以我们希望固定IP地址。</p><p>步骤如下：</p><ol><li>运行如下命令：</li></ol><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> nano /etc/rc.conf<br></code></pre></td></tr></table></figure><ol><li>在最后添加如下内容：</li></ol><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/89d8ad9bb5034bb9b67f5d4f89238b69.webp" alt="img"></p><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs nginx"><span class="hljs-attribute">ifconfig</span> wlan0 <span class="hljs-number">192.168.31.241</span><br></code></pre></td></tr></table></figure><p>IP地址固定完成。</p><h2 id="3-更换apt源"><a href="#3-更换apt源" class="headerlink" title="3.更换apt源"></a>3.更换apt源</h2><p>树莓派默认的apt源是国外的，这就导致国内访问的话速度很慢，甚至访问不了，所以我们有必要进行换源的操作。</p><ul><li>编辑&#x2F;etc&#x2F;apt&#x2F;sources.list文件，这里推荐使用系统自带的nano命令编辑，命令如下：</li></ul><p>进入编辑界面删除原有的内容，粘贴如下的信息：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash"><span class="hljs-built_in">sudo</span> nano /etc/apt/sources.list<br></code></pre></td></tr></table></figure><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs 1c">deb http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/raspbian/raspbian/ bullseye  main non-free contrib rpi</span><br>deb<span class="hljs-punctuation">-</span>src http<span class="hljs-punctuation">:</span><span class="hljs-comment">//mirrors.aliyun.com/raspbian/raspbian/ bullseye main non-free contrib rpi</span><br></code></pre></td></tr></table></figure><ul><li>更新软件索引列表</li></ul><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs routeros">sudo apt-<span class="hljs-built_in">get</span> update<br>比较索引清单更新依赖关系<br>sudo apt-<span class="hljs-built_in">get</span><span class="hljs-built_in"> upgrade </span>-y<br></code></pre></td></tr></table></figure><h2 id="4-开启ssh服务"><a href="#4-开启ssh服务" class="headerlink" title="4.开启ssh服务"></a>4.开启ssh服务</h2><p><strong>sudo raspi-config</strong></p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/23355d3ec0d546389984977442d33f48.webp" alt="img"></p><p><img src="https://raw.githubusercontent.com/alpha-1024/image_host/PicGo-Upload/7d6ba283fd584547a4aa3aeeb31d97b4.webp" alt="img"></p><h2 id="后记"><a href="#后记" class="headerlink" title="后记"></a>后记</h2><p>通过对树莓派进行上述操作，我们就可以在树莓派上进行开发了，当然我们也可以进行很对其他的配置，我们有机会再进行讲解。</p>]]></content>
    
    
    <categories>
      
      <category>树莓派linux</category>
      
      <category>配置教程</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>测试文章</title>
    <link href="/2021/06/10/%E7%A4%BA%E4%BE%8B%E6%96%87%E6%A1%A3/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%20-%20%E5%89%AF%E6%9C%AC%20(2)/"/>
    <url>/2021/06/10/%E7%A4%BA%E4%BE%8B%E6%96%87%E6%A1%A3/%E6%B5%8B%E8%AF%95%E6%96%87%E7%AB%A0%20-%20%E5%89%AF%E6%9C%AC%20(2)/</url>
    
    <content type="html"><![CDATA[<h3 id="核心思路"><a href="#核心思路" class="headerlink" title="核心思路"></a>核心思路</h3><p>要想“样式好看”，关键在于选择一个<strong>现代、轻量且可定制性高</strong>的评论系统。这些系统通常与 Fluid 主题的风格能完美融合。</p><h3 id="“好看又好用”的评论系统推荐"><a href="#“好看又好用”的评论系统推荐" class="headerlink" title="“好看又好用”的评论系统推荐"></a>“好看又好用”的评论系统推荐</h3><p>我将为你推荐几个选项，并按“美观度”和“综合体验”进行排序。</p><table><thead><tr><th align="left">评论系统</th><th align="left">优点</th><th align="left">缺点</th><th align="left">推荐指数</th></tr></thead><tbody><tr><td align="left"><strong>Waline</strong></td><td align="left"><strong>样式最现代化、功能最全（表情、图片、浏览量统计、社交登录）、高度可定制，与 Fluid 融合度最高。</strong></td><td align="left">需要自己动手部署一个免费的后端服务（使用 Vercel，有手就行）。</td><td align="left">⭐⭐⭐⭐⭐ <strong>（首选）</strong></td></tr><tr><td align="left"><strong>Twikoo</strong></td><td align="left">和 Waline 类似，功能强大，样式美观，是 Waline 的一个优秀替代品。</td><td align="left">同样需要自己部署免费后端服务。</td><td align="left">⭐⭐⭐⭐☆</td></tr><tr><td align="left"><strong>Gitalk</strong></td><td align="left">风格简洁，利用 GitHub Issues 存储评论，对开发者友好，无额外服务器成本。</td><td align="left">1. 评论者必须登录 GitHub。<br>2. 样式相对固定。</td><td align="left">⭐⭐⭐⭐ (如果你的读者都是程序员)</td></tr><tr><td align="left"><strong>Disqus</strong></td><td align="left">设置最简单，老牌稳定。</td><td align="left">1. <strong>样式可能比较老旧</strong>，与现代主题不搭。<br>2. <strong>国内访问慢，可能被墙</strong>。<br>3. 免费版有广告。</td><td align="left">⭐⭐☆ (不推荐)</td></tr></tbody></table><p><strong>结论</strong>：如果你追求“好看”，那么 <strong>Waline</strong> 是当之无愧的最佳选择。它不仅功能强大，而且视觉效果和用户体验都非常出色。下面的教程将以 Waline 为例。</p><hr><h3 id="一步步教你配置-Waline-评论系统"><a href="#一步步教你配置-Waline-评论系统" class="headerlink" title="一步步教你配置 Waline 评论系统"></a>一步步教你配置 Waline 评论系统</h3><p>配置 Waline 分为两步：</p><ol><li><strong>部署后端服务</strong>：评论数据需要一个地方存储，我们使用 Vercel 平台提供的免费服务来部署。</li><li><strong>修改主题配置</strong>：在 Fluid 主题的配置文件中启用 Waline 并填入后端地址。</li></ol><h4 id="第一步：一键部署-Waline-后端到-Vercel"><a href="#第一步：一键部署-Waline-后端到-Vercel" class="headerlink" title="第一步：一键部署 Waline 后端到 Vercel"></a><strong>第一步：一键部署 Waline 后端到 Vercel</strong></h4><p>这是最关键的一步，但现在已经非常简单了。</p><ol><li><p><strong>点击下方链接</strong>，它会引导你用你的 GitHub 账号一键部署 Waline 服务。</p><ul><li><strong>一键部署链接</strong>: <a href="https://vercel.com/new/clone?repository-url=https://github.com/walinejs/waline/tree/main/example">https://vercel.com/new/clone?repository-url=https://github.com/walinejs/waline/tree/main/example</a></li></ul></li><li><p>打开链接后，你会看到 Vercel 的界面：</p><ul><li>如果你没有登录，它会提示你使用 GitHub 账号登录。</li><li>登录后，它会让你为这个项目创建一个新的 Git 仓库，随便起个名字（比如 <code>my-waline-server</code>），然后点击 <strong>Create</strong>。</li></ul></li><li><p><strong>配置环境变量（重要）</strong>：</p><ul><li>接下来，Vercel 会让你配置环境变量，这是用来存储你的评论数据的地方。我们使用免费的 <strong>LeanCloud</strong>。</li><li>请先去 <a href="https://leancloud.app/">LeanCloud 国际版</a> 注册一个账号（如果已有请登录）。</li><li>登录后，在后台创建一个新应用，名字随意。</li><li>进入应用，找到 <code>设置</code> -&gt; <code>应用凭证</code>，你就能看到 <code>AppID</code>, <code>AppKey</code> 和 <code>REST API 服务器地址</code>。</li><li>回到 Vercel 的部署页面，将这几个值填入对应的环境变量中：<ul><li><code>LEAN_ID</code>  -&gt; 填你的 <code>AppID</code></li><li><code>LEAN_KEY</code> -&gt; 填你的 <code>AppKey</code></li><li><code>LEAN_SERVER</code> -&gt; 填你的 <code>REST API 服务器地址</code></li></ul></li><li>填写完毕后，点击 <strong>Deploy</strong>（部署）。</li></ul></li><li><p><strong>获取后端地址</strong>：</p><ul><li>等待几分钟，Vercel 就会部署完成。</li><li>部署成功后，Vercel 会给你一个域名，通常以 <code>.vercel.app</code> 结尾。<strong>这个地址就是你的 Waline 后端服务地址</strong>，请复制并保存好。例如：<code>https://my-waline-project.vercel.app</code>。</li></ul></li></ol><h4 id="第二步：修改-Fluid-主题配置"><a href="#第二步：修改-Fluid-主题配置" class="headerlink" title="第二步：修改 Fluid 主题配置"></a><strong>第二步：修改 Fluid 主题配置</strong></h4><p>现在我们回到你的 Hexo 博客。</p><ol><li><p><strong>打开主题配置文件</strong>：<br><code>themes/hexo-theme-fluid/_config.yml</code></p></li><li><p><strong>找到评论配置</strong>：<br>用 <code>Ctrl+F</code> 搜索 <code>comments</code>，你会找到类似下面的配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">comments:</span><br>  <span class="hljs-comment"># 是否启用评论</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-comment"># 默认的评论系统</span><br>  <span class="hljs-comment"># 可选: disqus | valine | gitalk | utterances | waline | twikoo | giscus</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">waline</span>  <span class="hljs-comment">#  &lt;-- 在这里选择 waline</span><br><br>  <span class="hljs-comment"># Waline 配置</span><br>  <span class="hljs-attr">waline:</span><br>    <span class="hljs-comment"># 后端服务地址</span><br>    <span class="hljs-attr">serverURL:</span> <span class="hljs-string">&#x27;&#x27;</span> <span class="hljs-comment">#  &lt;-- 把你的 Vercel 地址粘贴到这里</span><br>    <span class="hljs-comment"># ... 其他 Waline 配置，可以先不管</span><br></code></pre></td></tr></table></figure></li><li><p><strong>填写配置</strong>：</p><ul><li>将 <code>type</code> 的值改为 <code>waline</code>。</li><li>将 <code>serverURL</code> 的值填写成你<strong>第一步获取到的 Vercel 地址</strong>。</li></ul><p><strong>最终效果示例：</strong></p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">comments:</span><br>  <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">type:</span> <span class="hljs-string">waline</span><br>  <br>  <span class="hljs-attr">waline:</span><br>    <span class="hljs-attr">serverURL:</span> <span class="hljs-string">&#x27;https://my-waline-project-xxxx.vercel.app&#x27;</span> <br>    <span class="hljs-comment"># 其他高级功能，比如表情、图片上传等，都可以在这里开启，详情参考 Waline 官方文档</span><br>    <span class="hljs-comment"># reaction: true  # 开启文章表情互动</span><br></code></pre></td></tr></table></figure></li></ol><h4 id="第三步：重新部署你的博客"><a href="#第三步：重新部署你的博客" class="headerlink" title="第三步：重新部署你的博客"></a><strong>第三步：重新部署你的博客</strong></h4><ol><li><p>保存所有修改。</p></li><li><p>在你的博客根目录下运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">hexo clean &amp;&amp; hexo g &amp;&amp; hexo d<br></code></pre></td></tr></table></figure><p>（如果你是本地预览，运行 <code>hexo clean &amp;&amp; hexo s</code>）</p></li></ol><p>现在，访问你博客的任意一篇文章，滑到最下方，就能看到一个样式非常精美、功能齐全的 Waline 评论区了！它的风格和 Fluid 主题完美契合，绝对满足你“好看”的需求。</p><p>如果你在部署过程中遇到任何问题，随时可以再问我！</p><figure class="highlight verilog"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs verilog">hexo <span class="hljs-keyword">new</span> page <span class="hljs-string">&quot;&quot;</span><br>hexo <span class="hljs-keyword">new</span> <span class="hljs-string">&quot;&quot;</span><br>hexo d(deploy)<br>hexo <span class="hljs-keyword">generate</span> <br>hexo server<br>hexo clean<br><br></code></pre></td></tr></table></figure>]]></content>
    
    
    <categories>
      
      <category>C++</category>
      
      <category>API</category>
      
    </categories>
    
    
    <tags>
      
      <tag>原创</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
